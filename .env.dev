# 개발 환경 환경변수 설정
# docker-compose.dev.enhanced.yml과 함께 사용

# =============================================================================
# 데이터베이스 설정
# =============================================================================

# MySQL 설정
MYSQL_ROOT_PASSWORD=1234
MYSQL_USER=puppy_dev
MYSQL_PASSWORD=dev123

# PostgreSQL 설정 (대안 DB)
POSTGRES_USER=puppy_dev
POSTGRES_PASSWORD=dev123

# Redis 설정
REDIS_PASSWORD=dev123

# =============================================================================
# 관리 도구 설정
# =============================================================================

# phpMyAdmin 설정
PHPMYADMIN_PASSWORD=dev123

# pgAdmin 설정
PGADMIN_EMAIL=dev@puppytalk.local
PGADMIN_PASSWORD=dev123

# Redis Commander 설정
REDIS_COMMANDER_USER=admin
REDIS_COMMANDER_PASSWORD=dev123

# Grafana 설정
GRAFANA_PASSWORD=dev123

# =============================================================================
# 메시징 시스템 설정
# =============================================================================

# RabbitMQ 설정
RABBITMQ_USER=puppy_dev
RABBITMQ_PASSWORD=dev123

# =============================================================================
# 개발 환경 설정
# =============================================================================

# 개발 환경 식별
ENVIRONMENT=development
DEBUG=true

# 로깅 레벨
LOG_LEVEL=DEBUG

# Spring Boot 개발 설정
SPRING_PROFILES_ACTIVE=local
SPRING_DEVTOOLS_RESTART_ENABLED=true
SPRING_DEVTOOLS_LIVERELOAD_ENABLED=true

# JVM 개발 최적화 설정
JAVA_OPTS=-Xms256m -Xmx512m -XX:+UseG1GC -XX:+UseContainerSupport -Dspring.profiles.active=local

# =============================================================================
# 외부 서비스 개발 설정 (모킹/테스트용)
# =============================================================================

# AI 서비스 개발 설정
AI_SERVICE_MOCK_ENABLED=true
AI_SERVICE_ENDPOINT=http://localhost:8080/mock/ai

# 푸시 알림 개발 설정
PUSH_SERVICE_MOCK_ENABLED=true
FCM_SERVICE_ACCOUNT_KEY_PATH=/dev/null

# 이메일 서비스 개발 설정 (MailHog 사용)
MAIL_HOST=localhost
MAIL_PORT=1025
MAIL_USERNAME=
MAIL_PASSWORD=

# =============================================================================
# 보안 설정 (개발용)
# =============================================================================

# JWT 시크릿 키 (개발용, 운영에서는 반드시 변경)
JWT_SECRET=dev-secret-key-change-in-production-environment-12345

# 암호화 키 (개발용)
ENCRYPTION_KEY=dev-encryption-key-32-bytes-long

# =============================================================================
# 네트워크 설정
# =============================================================================

# CORS 허용 오리진 (개발용)
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:8000

# WebSocket 허용 오리진
WEBSOCKET_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001

# =============================================================================
# 모니터링 및 관찰 가능성
# =============================================================================

# Prometheus 설정
PROMETHEUS_ENABLED=true
METRICS_EXPORT_ENABLED=true

# Jaeger 트레이싱 설정
JAEGER_ENABLED=true
JAEGER_ENDPOINT=http://localhost:14268/api/traces

# Elasticsearch 설정
ELASTICSEARCH_ENABLED=true
ELASTICSEARCH_HOST=localhost
ELASTICSEARCH_PORT=9200

# =============================================================================
# 개발 도구 설정
# =============================================================================

# WireMock 설정
WIREMOCK_ENABLED=true
WIREMOCK_PORT=8080

# LocalStack AWS 설정
LOCALSTACK_ENABLED=true
LOCALSTACK_ENDPOINT=http://localhost:4566
AWS_ACCESS_KEY_ID=test
AWS_SECRET_ACCESS_KEY=test
AWS_DEFAULT_REGION=ap-northeast-2

# =============================================================================
# 성능 및 리소스 설정
# =============================================================================

# 커넥션 풀 설정 (개발환경 최적화)
DB_CONNECTION_POOL_SIZE=5
REDIS_CONNECTION_POOL_SIZE=5

# 캐시 설정
CACHE_TTL=300
CACHE_MAX_SIZE=1000

# 스레드 풀 설정
ASYNC_EXECUTOR_CORE_POOL_SIZE=2
ASYNC_EXECUTOR_MAX_POOL_SIZE=5
ASYNC_EXECUTOR_QUEUE_CAPACITY=100

# =============================================================================
# 개발 편의 설정
# =============================================================================

# 자동 재시작 설정
AUTO_RESTART_ENABLED=true

# 개발 모드 설정
DEV_MODE=true
MOCK_EXTERNAL_SERVICES=true

# 개발용 시드 데이터
SEED_DATA_ENABLED=true
SEED_DATA_PATH=classpath:dev/seed-data.sql

# API 문서화 설정
SWAGGER_ENABLED=true
API_DOCS_ENABLED=true

# 개발용 프로파일링
PROFILING_ENABLED=false
ACTUATOR_ENDPOINTS_ENABLED=true

# =============================================================================
# 주의사항
# =============================================================================

# ⚠️  이 파일은 개발 환경 전용입니다.
# ⚠️  운영 환경에서는 절대 사용하지 마세요.
# ⚠️  모든 비밀번호와 키는 개발용으로만 사용됩니다.
# ⚠️  .env.dev 파일을 git에 커밋하지 마세요 (.gitignore에 추가 필요)

# 사용법:
# docker-compose --env-file .env.dev -f docker-compose.dev.enhanced.yml up -d