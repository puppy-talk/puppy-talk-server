version: '3.8'

services:
  # MySQL 데이터베이스
  mysql:
    container_name: puppy-talk-mysql
    image: mysql:8.0.36
    ports:
      - "3307:3306"
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: puppy_talk_db
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-1234}
      MYSQL_USER: ${MYSQL_USER:-puppy_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-puppy_pass}
      TZ: Asia/Seoul
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-time-zone=+09:00
      - --sql-mode=STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO
      - --max_connections=1000
      - --innodb-buffer-pool-size=256M
    volumes:
      - mysql_data:/var/lib/mysql
      - ./schema/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "--silent"]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - puppy-talk-network

  # Redis (캐싱 및 세션 저장용)
  redis:
    container_name: puppy-talk-redis
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    environment:
      TZ: Asia/Seoul
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - puppy-talk-network

  # Puppy Talk 애플리케이션
  app:
    container_name: puppy-talk-server
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILD_DATE=${BUILD_DATE:-now}
        - VCS_REF=${VCS_REF:-dev}
    ports:
      - "8080:8080"
      - "8081:8081"  # Management/Actuator port
    restart: unless-stopped
    environment:
      # Spring Profiles
      SPRING_PROFILES_ACTIVE: docker
      
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/puppy_talk_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER:-puppy_user}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD:-puppy_pass}
      SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE: 10
      SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE: 2
      
      # Liquibase Configuration (시드 데이터 자동 삽입)
      SPRING_LIQUIBASE_ENABLED: "true"
      SPRING_LIQUIBASE_CHANGE_LOG: "classpath:db/changelog/db.changelog-master.xml"
      SPRING_LIQUIBASE_CONTEXTS: "docker"
      
      # Redis Configuration
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_TIMEOUT: 2000ms
      
      # JVM Configuration
      JAVA_OPTS: >-
        -Xms512m 
        -Xmx1g 
        -XX:+UseG1GC 
        -XX:+UseContainerSupport 
        -XX:MaxRAMPercentage=75.0
        -XX:+HeapDumpOnOutOfMemoryError
        -XX:HeapDumpPath=/tmp/heapdump.hprof
        -Duser.timezone=Asia/Seoul
        -Dspring.profiles.active=docker
      
      # Application Configuration
      SERVER_PORT: 8080
      MANAGEMENT_SERVER_PORT: 8081
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info,metrics,prometheus
      
      # WebSocket Configuration
      PUPPY_TALK_WEBSOCKET_ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000,https://puppytalk.com}
      
      # Logging Configuration
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_COM_PUPPY_TALK: DEBUG
      LOGGING_PATTERN_CONSOLE: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"
      
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/actuator/health"]
      start_period: 60s
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - app_logs:/application/logs
      - app_tmp:/tmp
    networks:
      - puppy-talk-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.puppy-talk.rule=Host(`api.puppytalk.local`)"
      - "traefik.http.services.puppy-talk.loadbalancer.server.port=8080"

  # 시드 데이터 자동 삽입 서비스
  seed-data:
    container_name: puppy-talk-seed-data
    image: curlimages/curl:latest
    restart: "no"
    depends_on:
      app:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for application to be ready...' &&
        sleep 30 &&
        echo 'Starting seed data insertion...' &&
        curl -f http://app:8081/actuator/health &&
        echo 'Application is ready! Seed data will be inserted by Liquibase automatically.' &&
        echo 'Seed data insertion completed!' &&
        exit 0
      "
    networks:
      - puppy-talk-network

  # Nginx (프록시 및 정적 파일 서빙)
  nginx:
    container_name: puppy-talk-nginx
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    environment:
      TZ: Asia/Seoul
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
      - seed-data
    networks:
      - puppy-talk-network
    labels:
      - "traefik.enable=false"

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local
  app_tmp:
    driver: local
  nginx_logs:
    driver: local

networks:
  puppy-talk-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16