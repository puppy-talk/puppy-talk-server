networks:
  puppy-talk-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

services:
  # Database Services
  mysql:
    image: mysql:8.0
    container_name: puppy-talk-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-1234}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-puppy_talk_db}
      MYSQL_USER: ${MYSQL_USER:-puppy_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-1234}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./schema/init:/docker-entrypoint-initdb.d
    networks:
      - puppy-talk-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 10s
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: puppy-talk-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - puppy-talk-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # Main Application
  puppy-talk-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: puppy-talk-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/puppy_talk_db?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER:-puppy_user}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD:-1234}
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET:-puppy-talk-super-secret-key-for-development-only}
      - AI_DEFAULT_PROVIDER=${AI_DEFAULT_PROVIDER:-gpt-oss}
      - AI_GPT_OSS_SERVER_URL=${AI_GPT_OSS_SERVER_URL:-http://ollama:11434}
      - FIREBASE_SERVICE_ACCOUNT_KEY=${FIREBASE_SERVICE_ACCOUNT_KEY:-firebase-service-account.json}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID:-puppy-talk-dev}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - puppy-talk-network
    volumes:
      - ./logs:/app/logs
      - ./firebase-service-account.json:/app/firebase-service-account.json:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # AI Services
  ollama:
    image: ollama/ollama:latest
    container_name: puppy-talk-ollama
    ports:
      - "11434:11434"
    volumes:
      - ./ollama:/root/.ollama
    networks:
      - puppy-talk-network
    environment:
      - OLLAMA_KEEP_ALIVE=24h
    restart: unless-stopped

  # Load Balancer
  nginx:
    image: nginx:alpine
    container_name: puppy-talk-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - puppy-talk-app
    networks:
      - puppy-talk-network
    restart: unless-stopped

  # Monitoring Services
  prometheus:
    image: prom/prometheus:latest
    container_name: puppy-talk-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - puppy-talk-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: puppy-talk-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - puppy-talk-network
    restart: unless-stopped

  # Development Tools (optional)
  adminer:
    image: adminer:latest
    container_name: puppy-talk-adminer
    ports:
      - "8081:8080"
    depends_on:
      - mysql
    networks:
      - puppy-talk-network
    restart: unless-stopped
    profiles:
      - dev

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: puppy-talk-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8082:8081"
    depends_on:
      - redis
    networks:
      - puppy-talk-network
    restart: unless-stopped
    profiles:
      - dev