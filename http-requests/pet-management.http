### 펫 관리 API 테스트 (AI 채팅을 위한 사전 설정)
### 
### AI 채팅 테스트 전에 펫을 등록하고 설정하는 API들

@baseUrl = http://localhost:8080
@userId = 1
@personaId = 1

### 1. 펫 등록 (AI 채팅을 위한 기본 설정)
POST {{baseUrl}}/api/pets
Content-Type: application/json
Accept: application/json

{
  "userId": {{userId}},
  "personaId": {{personaId}},
  "name": "멍멍이",
  "breed": "골든리트리버",
  "age": 3,
  "profileImageUrl": "https://example.com/images/golden-retriever.jpg"
}

### 2. 다양한 페르소나로 펫 등록 테스트

### 활발한 비글 등록
POST {{baseUrl}}/api/pets
Content-Type: application/json
Accept: application/json

{
  "userId": {{userId}},
  "personaId": 1,
  "name": "바둑이",
  "breed": "비글",
  "age": 2,
  "profileImageUrl": "https://example.com/images/beagle.jpg"
}

### 차분한 시베리안 허스키 등록
POST {{baseUrl}}/api/pets
Content-Type: application/json
Accept: application/json

{
  "userId": {{userId}},
  "personaId": 2,
  "name": "화이트",
  "breed": "시베리안 허스키",
  "age": 5,
  "profileImageUrl": "https://example.com/images/husky.jpg"
}

### 장난꾸러기 푸들 등록
POST {{baseUrl}}/api/pets
Content-Type: application/json
Accept: application/json

{
  "userId": {{userId}},
  "personaId": 3,
  "name": "코코",
  "breed": "푸들",
  "age": 1,
  "profileImageUrl": "https://example.com/images/poodle.jpg"
}

### 3. AI 테스트용 특별한 설정의 펫들

### 나이가 많은 지혜로운 펫
POST {{baseUrl}}/api/pets
Content-Type: application/json
Accept: application/json

{
  "userId": {{userId}},
  "personaId": 1,
  "name": "할아버지",
  "breed": "골든리트리버",
  "age": 12,
  "profileImageUrl": "https://example.com/images/old-dog.jpg"
}

### 어린 강아지
POST {{baseUrl}}/api/pets
Content-Type: application/json
Accept: application/json

{
  "userId": {{userId}},
  "personaId": 1,
  "name": "새끼",
  "breed": "치와와",
  "age": 0,
  "profileImageUrl": "https://example.com/images/puppy.jpg"
}

### 4. 에러 케이스 테스트

### 존재하지 않는 사용자 ID
POST {{baseUrl}}/api/pets
Content-Type: application/json
Accept: application/json

{
  "userId": 99999,
  "personaId": {{personaId}},
  "name": "에러테스트",
  "breed": "믹스",
  "age": 2
}

### 존재하지 않는 페르소나 ID
POST {{baseUrl}}/api/pets
Content-Type: application/json
Accept: application/json

{
  "userId": {{userId}},
  "personaId": 99999,
  "name": "에러테스트2",
  "breed": "믹스",
  "age": 2
}

### 잘못된 나이 (음수)
POST {{baseUrl}}/api/pets
Content-Type: application/json
Accept: application/json

{
  "userId": {{userId}},
  "personaId": {{personaId}},
  "name": "에러테스트3",
  "breed": "믹스",
  "age": -1
}

### 빈 이름
POST {{baseUrl}}/api/pets
Content-Type: application/json
Accept: application/json

{
  "userId": {{userId}},
  "personaId": {{personaId}},
  "name": "",
  "breed": "믹스",
  "age": 2
}
